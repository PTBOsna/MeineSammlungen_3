#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MeineSammlungen_3
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SasmmlungMS")]
	public partial class DataClassesSammlungenDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnCreated();
    partial void InsertGrunddaten(Grunddaten instance);
    partial void UpdateGrunddaten(Grunddaten instance);
    partial void DeleteGrunddaten(Grunddaten instance);
    partial void InsertModule(Module instance);
    partial void UpdateModule(Module instance);
    partial void DeleteModule(Module instance);
    partial void InsertModulMikro(ModulMikro instance);
    partial void UpdateModulMikro(ModulMikro instance);
    partial void DeleteModulMikro(ModulMikro instance);
    partial void InsertAblage(Ablage instance);
    partial void UpdateAblage(Ablage instance);
    partial void DeleteAblage(Ablage instance);
    #endregion
		
		public DataClassesSammlungenDataContext() : 
				base(global::MeineSammlungen_3.Properties.Settings.Default.SasmmlungMSConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesSammlungenDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesSammlungenDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesSammlungenDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesSammlungenDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Grunddaten> Grunddaten
		{
			get
			{
				return this.GetTable<Grunddaten>();
			}
		}
		
		public System.Data.Linq.Table<Module> Module
		{
			get
			{
				return this.GetTable<Module>();
			}
		}
		
		public System.Data.Linq.Table<ModulMikro> ModulMikro
		{
			get
			{
				return this.GetTable<ModulMikro>();
			}
		}
		
		public System.Data.Linq.Table<Ablage> Ablage
		{
			get
			{
				return this.GetTable<Ablage>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Grunddaten")]
	public partial class Grunddaten : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _LfdNr;
		
		private int _Modul;
		
		private string _Nr;
		
		private string _Objekt;
		
		private string _Detail;
		
		private string _Bemerkung;
		
		private string _Ablageort;
		
		private int _Ablageort_neu;
		
		private System.Nullable<System.DateTime> _Erstellt;
		
		private System.Nullable<System.DateTime> _Geaendert;
		
		private System.Nullable<bool> _Checked;
		
		private int _ImgCount;
		
		private EntitySet<Ablage> _Ablage;
		
		private EntityRef<Module> _Module;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLfdNrChanging(int value);
    partial void OnLfdNrChanged();
    partial void OnModulChanging(int value);
    partial void OnModulChanged();
    partial void OnNrChanging(string value);
    partial void OnNrChanged();
    partial void OnObjektChanging(string value);
    partial void OnObjektChanged();
    partial void OnDetailChanging(string value);
    partial void OnDetailChanged();
    partial void OnBemerkungChanging(string value);
    partial void OnBemerkungChanged();
    partial void OnAblageortChanging(string value);
    partial void OnAblageortChanged();
    partial void OnAblageort_neuChanging(int value);
    partial void OnAblageort_neuChanged();
    partial void OnErstelltChanging(System.Nullable<System.DateTime> value);
    partial void OnErstelltChanged();
    partial void OnGeaendertChanging(System.Nullable<System.DateTime> value);
    partial void OnGeaendertChanged();
    partial void OnCheckedChanging(System.Nullable<bool> value);
    partial void OnCheckedChanged();
    partial void OnImgCountChanging(int value);
    partial void OnImgCountChanged();
    #endregion
		
		public Grunddaten()
		{
			this._Ablage = new EntitySet<Ablage>(new Action<Ablage>(this.attach_Ablage), new Action<Ablage>(this.detach_Ablage));
			this._Module = default(EntityRef<Module>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LfdNr", DbType="Int NOT NULL")]
		public int LfdNr
		{
			get
			{
				return this._LfdNr;
			}
			set
			{
				if ((this._LfdNr != value))
				{
					this.OnLfdNrChanging(value);
					this.SendPropertyChanging();
					this._LfdNr = value;
					this.SendPropertyChanged("LfdNr");
					this.OnLfdNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modul", DbType="Int NOT NULL")]
		public int Modul
		{
			get
			{
				return this._Modul;
			}
			set
			{
				if ((this._Modul != value))
				{
					if (this._Module.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModulChanging(value);
					this.SendPropertyChanging();
					this._Modul = value;
					this.SendPropertyChanged("Modul");
					this.OnModulChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nr", DbType="NChar(10)")]
		public string Nr
		{
			get
			{
				return this._Nr;
			}
			set
			{
				if ((this._Nr != value))
				{
					this.OnNrChanging(value);
					this.SendPropertyChanging();
					this._Nr = value;
					this.SendPropertyChanged("Nr");
					this.OnNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Objekt", DbType="NVarChar(255)")]
		public string Objekt
		{
			get
			{
				return this._Objekt;
			}
			set
			{
				if ((this._Objekt != value))
				{
					this.OnObjektChanging(value);
					this.SendPropertyChanging();
					this._Objekt = value;
					this.SendPropertyChanged("Objekt");
					this.OnObjektChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detail", DbType="NVarChar(255)")]
		public string Detail
		{
			get
			{
				return this._Detail;
			}
			set
			{
				if ((this._Detail != value))
				{
					this.OnDetailChanging(value);
					this.SendPropertyChanging();
					this._Detail = value;
					this.SendPropertyChanged("Detail");
					this.OnDetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bemerkung", DbType="NVarChar(255)")]
		public string Bemerkung
		{
			get
			{
				return this._Bemerkung;
			}
			set
			{
				if ((this._Bemerkung != value))
				{
					this.OnBemerkungChanging(value);
					this.SendPropertyChanging();
					this._Bemerkung = value;
					this.SendPropertyChanged("Bemerkung");
					this.OnBemerkungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ablageort", DbType="NVarChar(255)")]
		public string Ablageort
		{
			get
			{
				return this._Ablageort;
			}
			set
			{
				if ((this._Ablageort != value))
				{
					this.OnAblageortChanging(value);
					this.SendPropertyChanging();
					this._Ablageort = value;
					this.SendPropertyChanged("Ablageort");
					this.OnAblageortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ablageort_neu", DbType="Int NOT NULL")]
		public int Ablageort_neu
		{
			get
			{
				return this._Ablageort_neu;
			}
			set
			{
				if ((this._Ablageort_neu != value))
				{
					this.OnAblageort_neuChanging(value);
					this.SendPropertyChanging();
					this._Ablageort_neu = value;
					this.SendPropertyChanged("Ablageort_neu");
					this.OnAblageort_neuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Erstellt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Erstellt
		{
			get
			{
				return this._Erstellt;
			}
			set
			{
				if ((this._Erstellt != value))
				{
					this.OnErstelltChanging(value);
					this.SendPropertyChanging();
					this._Erstellt = value;
					this.SendPropertyChanged("Erstellt");
					this.OnErstelltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Geaendert", DbType="DateTime")]
		public System.Nullable<System.DateTime> Geaendert
		{
			get
			{
				return this._Geaendert;
			}
			set
			{
				if ((this._Geaendert != value))
				{
					this.OnGeaendertChanging(value);
					this.SendPropertyChanging();
					this._Geaendert = value;
					this.SendPropertyChanged("Geaendert");
					this.OnGeaendertChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Checked", DbType="Bit")]
		public System.Nullable<bool> Checked
		{
			get
			{
				return this._Checked;
			}
			set
			{
				if ((this._Checked != value))
				{
					this.OnCheckedChanging(value);
					this.SendPropertyChanging();
					this._Checked = value;
					this.SendPropertyChanged("Checked");
					this.OnCheckedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImgCount", DbType="Int NOT NULL")]
		public int ImgCount
		{
			get
			{
				return this._ImgCount;
			}
			set
			{
				if ((this._ImgCount != value))
				{
					this.OnImgCountChanging(value);
					this.SendPropertyChanging();
					this._ImgCount = value;
					this.SendPropertyChanged("ImgCount");
					this.OnImgCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grunddaten_Ablage", Storage="_Ablage", ThisKey="Ablageort_neu", OtherKey="ID")]
		public EntitySet<Ablage> Ablage
		{
			get
			{
				return this._Ablage;
			}
			set
			{
				this._Ablage.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Module_Grunddaten", Storage="_Module", ThisKey="Modul", OtherKey="ID", IsForeignKey=true)]
		public Module Module
		{
			get
			{
				return this._Module.Entity;
			}
			set
			{
				Module previousValue = this._Module.Entity;
				if (((previousValue != value) 
							|| (this._Module.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Module.Entity = null;
						previousValue.Grunddaten.Remove(this);
					}
					this._Module.Entity = value;
					if ((value != null))
					{
						value.Grunddaten.Add(this);
						this._Modul = value.ID;
					}
					else
					{
						this._Modul = default(int);
					}
					this.SendPropertyChanged("Module");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ablage(Ablage entity)
		{
			this.SendPropertyChanging();
			entity.Grunddaten = this;
		}
		
		private void detach_Ablage(Ablage entity)
		{
			this.SendPropertyChanging();
			entity.Grunddaten = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Module")]
	public partial class Module : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Modul;
		
		private EntitySet<Grunddaten> _Grunddaten;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnModulChanging(string value);
    partial void OnModulChanged();
    #endregion
		
		public Module()
		{
			this._Grunddaten = new EntitySet<Grunddaten>(new Action<Grunddaten>(this.attach_Grunddaten), new Action<Grunddaten>(this.detach_Grunddaten));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modul", DbType="NVarChar(255)")]
		public string Modul
		{
			get
			{
				return this._Modul;
			}
			set
			{
				if ((this._Modul != value))
				{
					this.OnModulChanging(value);
					this.SendPropertyChanging();
					this._Modul = value;
					this.SendPropertyChanged("Modul");
					this.OnModulChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Module_Grunddaten", Storage="_Grunddaten", ThisKey="ID", OtherKey="Modul")]
		public EntitySet<Grunddaten> Grunddaten
		{
			get
			{
				return this._Grunddaten;
			}
			set
			{
				this._Grunddaten.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Grunddaten(Grunddaten entity)
		{
			this.SendPropertyChanging();
			entity.Module = this;
		}
		
		private void detach_Grunddaten(Grunddaten entity)
		{
			this.SendPropertyChanging();
			entity.Module = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModulMikro")]
	public partial class ModulMikro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Schnittebene;
		
		private string _Schnittart;
		
		private string _Farbung;
		
		private string _Aufhellung;
		
		private string _Fixierung;
		
		private string _Einschluss;
		
		private string _Hineise;
		
		private System.Nullable<int> _Grunddaten_ID;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSchnittebeneChanging(string value);
    partial void OnSchnittebeneChanged();
    partial void OnSchnittartChanging(string value);
    partial void OnSchnittartChanged();
    partial void OnFarbungChanging(string value);
    partial void OnFarbungChanged();
    partial void OnAufhellungChanging(string value);
    partial void OnAufhellungChanged();
    partial void OnFixierungChanging(string value);
    partial void OnFixierungChanged();
    partial void OnEinschlussChanging(string value);
    partial void OnEinschlussChanged();
    partial void OnHineiseChanging(string value);
    partial void OnHineiseChanged();
    partial void OnGrunddaten_IDChanging(System.Nullable<int> value);
    partial void OnGrunddaten_IDChanged();
    #endregion
		
		public ModulMikro()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Schnittebene", DbType="NVarChar(255)")]
		public string Schnittebene
		{
			get
			{
				return this._Schnittebene;
			}
			set
			{
				if ((this._Schnittebene != value))
				{
					this.OnSchnittebeneChanging(value);
					this.SendPropertyChanging();
					this._Schnittebene = value;
					this.SendPropertyChanged("Schnittebene");
					this.OnSchnittebeneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Schnittart", DbType="NVarChar(255)")]
		public string Schnittart
		{
			get
			{
				return this._Schnittart;
			}
			set
			{
				if ((this._Schnittart != value))
				{
					this.OnSchnittartChanging(value);
					this.SendPropertyChanging();
					this._Schnittart = value;
					this.SendPropertyChanged("Schnittart");
					this.OnSchnittartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Farbung", DbType="NVarChar(255)")]
		public string Farbung
		{
			get
			{
				return this._Farbung;
			}
			set
			{
				if ((this._Farbung != value))
				{
					this.OnFarbungChanging(value);
					this.SendPropertyChanging();
					this._Farbung = value;
					this.SendPropertyChanged("Farbung");
					this.OnFarbungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aufhellung", DbType="NVarChar(255)")]
		public string Aufhellung
		{
			get
			{
				return this._Aufhellung;
			}
			set
			{
				if ((this._Aufhellung != value))
				{
					this.OnAufhellungChanging(value);
					this.SendPropertyChanging();
					this._Aufhellung = value;
					this.SendPropertyChanged("Aufhellung");
					this.OnAufhellungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fixierung", DbType="NVarChar(255)")]
		public string Fixierung
		{
			get
			{
				return this._Fixierung;
			}
			set
			{
				if ((this._Fixierung != value))
				{
					this.OnFixierungChanging(value);
					this.SendPropertyChanging();
					this._Fixierung = value;
					this.SendPropertyChanged("Fixierung");
					this.OnFixierungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Einschluss", DbType="NVarChar(255)")]
		public string Einschluss
		{
			get
			{
				return this._Einschluss;
			}
			set
			{
				if ((this._Einschluss != value))
				{
					this.OnEinschlussChanging(value);
					this.SendPropertyChanging();
					this._Einschluss = value;
					this.SendPropertyChanged("Einschluss");
					this.OnEinschlussChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hineise", DbType="NVarChar(255)")]
		public string Hineise
		{
			get
			{
				return this._Hineise;
			}
			set
			{
				if ((this._Hineise != value))
				{
					this.OnHineiseChanging(value);
					this.SendPropertyChanging();
					this._Hineise = value;
					this.SendPropertyChanged("Hineise");
					this.OnHineiseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grunddaten_ID", DbType="Int")]
		public System.Nullable<int> Grunddaten_ID
		{
			get
			{
				return this._Grunddaten_ID;
			}
			set
			{
				if ((this._Grunddaten_ID != value))
				{
					this.OnGrunddaten_IDChanging(value);
					this.SendPropertyChanging();
					this._Grunddaten_ID = value;
					this.SendPropertyChanged("Grunddaten_ID");
					this.OnGrunddaten_IDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ablage")]
	public partial class Ablage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Ablageort;
		
		private string _Beschreibung;
		
		private EntityRef<Grunddaten> _Grunddaten;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAblageortChanging(string value);
    partial void OnAblageortChanged();
    partial void OnBeschreibungChanging(string value);
    partial void OnBeschreibungChanged();
    #endregion
		
		public Ablage()
		{
			this._Grunddaten = default(EntityRef<Grunddaten>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Grunddaten.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ablageort", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Ablageort
		{
			get
			{
				return this._Ablageort;
			}
			set
			{
				if ((this._Ablageort != value))
				{
					this.OnAblageortChanging(value);
					this.SendPropertyChanging();
					this._Ablageort = value;
					this.SendPropertyChanged("Ablageort");
					this.OnAblageortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Beschreibung", DbType="VarChar(250)")]
		public string Beschreibung
		{
			get
			{
				return this._Beschreibung;
			}
			set
			{
				if ((this._Beschreibung != value))
				{
					this.OnBeschreibungChanging(value);
					this.SendPropertyChanging();
					this._Beschreibung = value;
					this.SendPropertyChanged("Beschreibung");
					this.OnBeschreibungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grunddaten_Ablage", Storage="_Grunddaten", ThisKey="ID", OtherKey="Ablageort_neu", IsForeignKey=true)]
		public Grunddaten Grunddaten
		{
			get
			{
				return this._Grunddaten.Entity;
			}
			set
			{
				Grunddaten previousValue = this._Grunddaten.Entity;
				if (((previousValue != value) 
							|| (this._Grunddaten.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grunddaten.Entity = null;
						previousValue.Ablage.Remove(this);
					}
					this._Grunddaten.Entity = value;
					if ((value != null))
					{
						value.Ablage.Add(this);
						this._ID = value.Ablageort_neu;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("Grunddaten");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
